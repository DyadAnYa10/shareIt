drop table if exists comments cascade;
drop table if exists bookings cascade;
drop table if exists items cascade;
drop table if exists users cascade;
drop table if exists bookings cascade;
drop table if exists requests cascade;

create table if not exists users
(
    id    bigint generated by default as identity not null,
    name  varchar                                 not null,
    email varchar unique                          not null,
    constraint user_id_pk
        primary key (id)
);

create unique index if not exists users_email_uindex
    on users (email);

create unique index if not exists users_id_uindex
    on users (id);

create table if not exists items
(
    id           bigint generated by default as identity not null,
    name         varchar                                 not null,
    description  varchar                                 not null,
    is_available boolean                                 not null,
    owner_id     bigint                                  not null,
    constraint item_id_pk
        primary key (id),
    constraint items_user_id_fk foreign key (owner_id) references users
);
create unique index if not exists items_id_uindex
    on items (id);


-- create type booking_status as enum ('WAITING', ' APPROVED', 'REJECTED', 'CANCELED');
create table if not exists bookings
(
    id         bigint generated by default as identity,
    start_date timestamp without time zone             not null,
    end_date   timestamp without time zone             not null,
    item_id    bigint references items (id)            not null,
    booker_id  bigint references users (id)            not null,
    status     varchar                                 default 'WAITING',
    constraint bookings_id_pk primary key (id)
);
create unique index if not exists bookings_id_uindex
    on bookings (id);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text       VARCHAR(512)                            NOT NULL,
    item_id    BIGINT REFERENCES items (id)            NOT NULL,
    author_id  BIGINT REFERENCES users (id)            NOT NULL,
    created    TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    PRIMARY KEY (comment_id)
);
CREATE table IF NOT EXISTS requests
(
    request_id   bigint generated by default as identity primary key,
    description  varchar NOT NULL,
    requestor_id bigint REFERENCES users (id) ON DELETE CASCADE,
    created      timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE items
    ADD COLUMN target_request_id bigint REFERENCES requests (request_id) ON DELETE CASCADE;


